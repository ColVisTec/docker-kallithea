name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches:
      - 'main'
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      with_latest:
        type: boolean
        description: 'With latest tag'
        required: false

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

#      - name: Install cosign
#        if: github.event_name != 'pull_request'
#        uses: sigstore/cosign-installer@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            toras9000/kallithea-mp
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'main' || !!inputs.with_latest }}
            type=semver,pattern={{version}},value={{branch}},enable=${{ github.ref_name != 'main' }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ./build
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}-${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest

#      - name: Sign the published Docker image
#        if: ${{ github.event_name != 'pull_request' }}
#        env:
#          COSIGN_EXPERIMENTAL: "true"
#        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
